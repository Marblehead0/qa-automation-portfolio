name: API (Postman)

on:
  push:
    paths:
      - "postman/**"
      - ".github/workflows/postman.yml"
      - "api_tests/**"
  pull_request:
    paths:
      - "postman/**"
      - ".github/workflows/postman.yml"
      - "api_tests/**"

permissions:
  contents: read

jobs:
  postman:
    runs-on: ubuntu-latest
    env:
      BASE_URL: ${{ secrets.API_BASE_URL }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-postman-${{ hashFiles('package-lock.json', 'package.json') }}

      - name: Install deps
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm i --no-fund --no-audit
          fi

      - name: Prepare CI Postman env
        run: |
          mkdir -p postman
          # Inject BASE_URL into a CI environment file
          jq --arg base "$BASE_URL" \
             '(.values // []) as $v | {name:"CI", values: ($v | map(if .key=="BASE_URL" then .value=$base | .enabled=true else . end))}' \
             postman/local.postman_environment.json > postman/ci_env.json

      - name: Verify collection present
        run: |
          ls -lah postman || true
          test -f postman/collection.json

      - name: Check reporter installed
        run: npx --yes newman-reporter-htmlextra --version
        
      - name: Decide BASE_URL (fallback to Prism)
        id: base
        run: |
          if [ -z "${{ secrets.API_BASE_URL }}" ]; then
            echo "No API_BASE_URL provided; starting Prism mock on :4010"
            npx --yes @stoplight/prism-cli@5 mock api/spec/openapi.yaml -p 4010 &
            echo $! > prism.pid
            for i in {1..30}; do nc -z localhost 4010 && break || sleep 1; done
            echo "base_url=http://localhost:4010" >> $GITHUB_OUTPUT
          else
            echo "base_url=${{ secrets.API_BASE_URL }}" >> $GITHUB_OUTPUT
          fi

      - name: Run Newman
        run: |
          mkdir -p reports/postman
          npx newman run postman/collection.json \
            --env-var BASE_URL="${{ steps.base.outputs.base_url }}" \
            -r htmlextra \
            --reporter-htmlextra-export reports/postman/report.html \
            --verbose

      - name: Stop Prism
        if: always()
        run: |
          if [ -f prism.pid ]; then kill $(cat prism.pid) || true; fi

      - name: Upload Postman report
        uses: actions/upload-artifact@v4
        with:
          name: postman-report
          path: reports/postman/report.html
